apiVersion: apps/v1
kind: Deployment
metadata:
  name: poc
  labels:
    app: minicd
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: poc
  template:
    metadata:
      labels:
        app: poc
    spec:
      volumes:
      - name: cert-dir
        emptyDir: {}
      - name: host-docker-dir
        hostPath:
          path: /etc/docker
          type: Directory
      - name: host-certs-dir
        hostPath:
          path: /etc/docker/certs.d
          type: Directory
      initContainers:
      - name: download-cert
        image: alpine
        command: ["/bin/ash", "-c", "mkdir -p /host/docker/certs.d/image-registry:443; apk add curl; curl image-registry:8080/domain.crt > /host/certs.d/image-registry:443/ca.crt; cp -r /host/certs.d/image-registry:443 /host/certs.d/localhost:31443"]
        volumeMounts:
        - mountPath: /certs
          name: cert-dir
        - name: host-docker-dir
          mountPath: "/host"
        securityContext:
          privileged: true
      containers:
      - name: poc
        image: docker:dind
        securityContext:
          privileged: true
        volumeMounts:
        - name: host-certs-dir
          mountPath: "/etc/docker/certs.d"
---

apiVersion: v1
kind: Service
metadata:
  name: poc
  labels:
    app: minicd
spec:
  selector:
    app: poc
  ports:
    - name: http
      protocol: TCP
      port: 5000
      targetPort: 5000
    - name: https
      protocol: TCP
      port: 443
      targetPort: 443
